{"mappings":"oeAAAA,EAAA,S,6IA6BAC,cAAcC,iBAAiB,SAE/B,SAA0BC,GACxB,IAAIC,EAAMC,aAAaC,QAAQC,EAAAC,kBAC/BJ,EAAMA,EAAMK,KAAKC,MAAMN,GAAO,GAE9B,MAAMO,EAASP,EAAIQ,KAAIC,IACrB,MAAMC,EAASC,SAASF,GACxB,OAAO,EAAAG,EAAAC,qBAAoBH,GAAQI,KAAKC,EAAc,IAKxD,SAASA,EAAcC,GACrB,MAAMC,YAAEA,EAAWC,MAAEA,EAAKC,GAAEA,EAAEC,OAAEA,EAAMC,aAAEA,EAAYC,aAAEA,GAAiBN,EAgBjEO,EAAOZ,SAASU,GAChBG,EAAS,qCAAqCL,iDACZA,+CACFA,KACpCM,KAAKC,MAAqB,GAAfJ,GAAqB,kHAIgBL,wBACnCC,uDAEGC,yEAGoBA,iDACEA,KAAMD,sDACLC,KAAMC,4DACLD,KAAMI,GAAc,kCAI9DI,EAAAC,QAAQC,mBAAmB,YAAaL,E,CAxC1CM,QAAQC,IAAIxB,E","sources":["src/js/libRender.js"],"sourcesContent":["import { checkWatchBtn, checkQueueBtn } from './local-storage';\nimport { fetchSearchFilmById } from './fetch-films';\nimport { backdrop, modalCloseBtn } from './refs';\nimport { renderModalCard } from './renderModalCard';\nimport { renderTrandFilms } from './render-cards';\nimport { gnrArr } from './fetch-films';\nimport { onEscPress } from './renderModalCard';\nimport { Spinner } from 'spin.js';\nimport { opts } from './opts-spinner';\nimport { Notify } from 'notiflix';\nimport { WATCHSTORAGE_KEY } from './data/keys';\n\nimport {\n  ref,\n  form,\n  gallery,\n  paginationEl,\n  galleryListEl,\n  modalCloseBtn,\n  modalWatchBtn,\n  modalQueueBtn,\n  footerTeamLink,\n  myLibWatchBtn,\n  myLibQueueBtn,\n  spiner,\n} from './refs';\n\n// const WACHLIB_KEY = \"wachlib\"\n\nmyLibWatchBtn.addEventListener('click', onClickWachedLib);\n\nfunction onClickWachedLib(e) {\n  let arr = localStorage.getItem(WATCHSTORAGE_KEY);\n  arr = arr ? JSON.parse(arr) : [];\n\n  const arrMap = arr.map(i => {\n    const number = parseInt(i);\n    return fetchSearchFilmById(number).then(renderWachLib);\n  });\n\n  console.log(arrMap);\n\n  function renderWachLib(data) {\n    const { poster_path, title, id, genres, release_date, vote_average } = data;\n    // const gnrArrCycle = gnrArr.flatMap(i => i);\n    // const idArr = gnrArrCycle.map(i => i);\n\n    // console.log(data.id)\n    // const res = idArr.filter(i => {\n    //   return genre_ids.includes(i.id);\n    // });\n    // const genreNames = res.map(i => i.name);\n    // const genreNamesSlice = [];\n    // if (genreNames.length >= 2) {\n    //   genreNamesSlice.push(`${genreNames.slice(0, 2) + ','}`);\n    // }\n    // if (genreNames.length === 1) {\n    //   genreNamesSlice.push(`${genreNames.slice(0, 1) + ','}`);\n    // }\n    const year = parseInt(release_date);\n    const markup = `<li class=\"gallery__item\" data-id=${id}>\n    <div class=\"gallery__wrapper\" data-id=${id}>\n    <span class=\"gallery__vote\" data-id=${id}>${\n      Math.round(vote_average * 10) / 10\n    }</span>\n        <img\n            class=\"gallery__img\"\n            src=\"https://www.themoviedb.org/t/p/w500${poster_path}\"\n            alt=\"${title}\"\n            loading=\"lazy\"\n            data-id=${id}\n            >\n    </div>\n    <div class=\"gallery__thumb\" data-id=${id}>\n        <h3 class=\"gallery__name\" data-id=${id}>${title}</h3>\n        <p class=\"gallery__genres\" data-id=${id}>${genres} Other</p>\n        <span class=\"gallery__year\" data-id=${id}>${year ? year : 'n/a'}</span>\n    </div>\n</li>`;\n\n    gallery.insertAdjacentHTML('beforeend', markup);\n  }\n}\n"],"names":["parcelRequire","myLibWatchBtn","addEventListener","e","arr","localStorage","getItem","$18cbB","WATCHSTORAGE_KEY","JSON","parse","arrMap","map","i","number","parseInt","$fvCRb","fetchSearchFilmById","then","renderWachLib","data","poster_path","title","id","genres","release_date","vote_average","year","markup","Math","round","$krGWQ","gallery","insertAdjacentHTML","console","log"],"version":3,"file":"myLib.33af42c8.js.map"}